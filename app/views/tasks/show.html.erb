<%# TODO maybe a reference to this Category's background image or something %>
<div class="row">
    <div class="container-fluid">
        <div class="jumbotron">

            <h1>Task: <%= @task.name %></h1>
            <h3>Category: <%= link_to @task.category.name,
                                      category_path(@task.category) %></h3>

            <p><b><i><%= @task.complete ? "Complete" : "Incomplete" %></i></b></p>

            <p>
                <strong>Duedate:</strong>
                <%= @task.duedate.strftime("%A, %B %e at %l:%M %p") %>, or
                <% if @task.duedate > Time.now %>
                    in
                <% end %>
                <%= time_ago_in_words(@task.duedate) %>
                <% if @task.duedate < Time.now %>
                    ago
                <% end %>
            </p>

            <%= link_to 'Edit', edit_task_path(@task), class: 'btn btn-info btn-md' %>
            <!-- TODO add button to "COMPLETE" the task; will require controller action-->
        </div>
    </div>
</div>

<button class="btn btn-warning" onclick="toggleSubtasks()">Toggle Subtasks</button>
<button class="btn btn-warning" onclick="toggleIntervals()">Toggle Intervals</button>
<div class="row">
    <div class="panel panel-default col-md-4" id="subtasks">
        <div class="panel-heading"><h3>Subtasks</h3></div>
        <div class="panel-body">
            <div class="well well-sm">
                    <%= render 'subtasks/form' %>
            </div>
            <ul class="list-group">
                <% @task.subtasks.each do |subtask| %>
                    <!-- TODO  subtasks should cycle red-yellow-green when you click -->
                    <li class="list-group-item">
                        <%= subtask.name %>
                        <span class="badge">
                             <%= link_to 'Delete', subtask_path(subtask), method: :delete, style: 'color:white;font-weight:normal;' %>
                        </span>
                    </li>
                <% end %>
            </ul>
        </div>
    </div>
    <div class="panel panel-default col-md-1">
    </div>
    <div class="panel panel-default col-md-7" id="intervals">
        <div class="panel-heading"><h3>Intervals</h3></div>
        <div class="panel-body">
            <div class="well well-sm">
                <div class="row">
                    <div class="col-md-2">
                        <button class="btn btn-success" id="record" onclick="recordButtonPressed()">Record</button>
                        <button class="btn btn-warning" id="cancel" onclick="cancelRecording()">Cancel</button>
                    </div>
                    <%= render 'intervals/form' %>
                </div>
            </div>
            <table class="table">
                <tr>
                    <th>Start</th>
                    <th>End</th>
                    <th>Time</th>
                    <th></th>
                </tr>
                <% @task.intervals.each do |interval| %>
                    <tr>
                        <td><%= interval.start %></td>
                        <td><%= interval.end %></td>
                        <td><%= distance_of_time_in_words(interval.end,interval.start) %></td>
                        <td><%= link_to 'Delete', interval_path(interval), method: :delete, class: 'btn btn-danger' %></td>
                    </tr>
                <% end %>
            </table>
        </div>
    </div>
</div>

<!-- omg not the Yavascript -->
<script>

    var currentUrl = window.location.pathname;
    var recordButton = $('#record');
    initializeRecordButton();

    function toggleSubtasks() { $('#subtasks').slideToggle('slow'); }

    function toggleIntervals() { $('#intervals').slideToggle('slow'); }


    function recordButtonPressed() {
        var startingToRecord = recordButton.html() == 'Record';
        recordButton
                .html(startingToRecord ? 'Stop' : 'Record')
                .toggleClass('btn-success')
                .toggleClass('btn-danger');

        if (typeof(Storage) !== "undefined") {
            if (startingToRecord) {
                localStorage.setItem(currentUrl, $.now());
            } else {
                var timeSpan = { interval : localStorage.getItem(currentUrl) + " " + $.now() };
                $.post(currentUrl+'/intervals-ajax', timeSpan, function(data) {
                    // TODO this does what it says, but does nothing useful
                    $('#intervals').appendChild($('p').html('Success!'));
                });
                localStorage.removeItem(currentUrl);
            }
        } else {
            recordButton.html('DISABLED');
        }
    }

    function initializeRecordButton() {
        if (typeof(Storage) !== "undefined") {
            if (localStorage.getItem(currentUrl) !== null) {
                recordButton
                        .html('Stop')
                        .addClass('btn-danger')
                        .removeClass('btn-success');
            } else {
                cancelRecording();
            }
        } else {
            recordButton.html('DISABLED');
        }
    }
    function cancelRecording() {
        if (typeof(Storage) !== "undefined") {
            localStorage.removeItem(currentUrl);
            recordButton
                    .html('Record')
                    .addClass('btn-success')
                    .removeClass('btn-danger');
        } else {
            recordButton.html('DISABLED');
        }
    }
</script>
